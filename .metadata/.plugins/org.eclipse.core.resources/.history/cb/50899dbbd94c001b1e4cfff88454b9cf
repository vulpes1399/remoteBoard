package test.remote.board.controller;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import test.remote.board.commons.Paging;
import test.remote.board.dao.BoardDao;
import test.remote.board.domain.Board;
import test.remote.board.service.BoardService;

@Controller
public class BoardContoller {
	
	
	@Autowired(required=true)
	BoardDao boardDao;
	
	@Autowired
	BoardService boardService;
	
	@RequestMapping(value="/board/board.do")
	public String boardPage() {
		return "/board/board";
	}
	

	/*
	 * @ResponseBody
	 * 
	 * @RequestMapping(value="/board/example_list") public List<Board> BoardList(){
	 * List<Board> lists = boardDao.selectBoardList(); return lists; }
	 */
	@ResponseBody
	@RequestMapping(value="/board/paging")
	public Paging BoardPaging(@RequestParam(value="page", defaultValue="1") int nowPage){
		// 페이지 구현에서 사용할 현재 페이지 번호
		
		int totalCount = 0;	// 전체 게시글 수
		int listCount = 10;	// 한 페이지당 표시할 목록 수
		int pageCount = 5;	// 한 그룹당 표시할 페이지 번호 수
		
		Paging pageData = null;
		
		try {
			// 전체 게시글 수 조회
			totalCount = boardService.getBoardListCount();
			// 페이지 번호 계산 --> 계산 결과를 로그로 출력될 것이다.
			pageData = new Paging(nowPage, totalCount, listCount, pageCount);
			
			//SQL의 LIMIT절에서 사용될 값을 Beans의 static 변수에 저장
			Board.setOffset(pageData.getOffset());
			Board.setListCount(pageData.getListCount());

		} catch (Exception e) { e.printStackTrace(); }
		
		// View 처리
		System.out.println(pageData);
		return pageData;
	}
	
	
	@ResponseBody
	@RequestMapping(value="/board/dataList")
	public List<Board> BoardDetailList(@RequestParam(value="error_type") String error_type, @RequestParam(value="sector") String sector){
		
		System.out.println("test "+error_type + sector);
		
		List<Board> lists = boardService.getBoardDetailList(error_type, sector);
		

		System.out.println("lists "+lists);
		return lists;
	}

}
